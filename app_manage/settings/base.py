"""
Django settings for hero_arithmetic_service project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import datetime
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app_manage.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app_manage.wsgi.application'
#
# DATABASE_ROUTERS = ['app_manage.database_router.DatabaseAppsRouter']


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

LOG_DIR = '/data/logs/hero_arithmetic_service'
LOGGING = {
    'version': 1,  # 日志设置版本号
    'disable_existing_loggers': False,  # 是否启动所有日志，不管是否用到
    'formatters': {  # 日志输出样式
        'verbose': {  # 详细
            'format': '%(asctime)s.%(msecs)03d %(levelname)s - [line:%(lineno)d] - %(filename)s %(module)s:%(funcName)s %(message)s',
            'datefmt': "%Y-%m-%d %H:%M:%S",
        },
        'standard': {
            'format': '%(asctime)s.%(msecs)03d %(levelname)s - %(filename)s - [line:%(lineno)d] - %(message)s',
            'datefmt': "%Y-%m-%d %H:%M:%S",
        }  # 日志格式
    },

    'filters': {
    },
    'handlers': {  # 日志规则设置
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'default': {
            'level': 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': '%s/all_info.log' % LOG_DIR,
            'backupCount': 7,
            'when': 'D',  # 每天一切
            'formatter': 'verbose',
            'encoding': 'utf-8',
        },
        'service_error': {
            'level': 'WARNING',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': '%s/service_error.log' % LOG_DIR,
            'backupCount': 30,
            'when': 'D',  # 每天一切
            'formatter': 'verbose',
            'encoding': 'utf-8',
        },
        'http_error': {
            'level': 'WARNING',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': '%s/http_error.log' % LOG_DIR,
            'backupCount': 30,
            'when': 'D',  # 每天一切
            'formatter': 'verbose',
            'encoding': 'utf-8',
        },

    },
    'loggers': {
        'django': {  # 最上级日志，通常不记录
            'handlers': ['default', 'console'],  # 使用的规则，低于Handlers的记录会被无视
            'level': 'WARNING',  # 日志记录信息级别，不同等级的会使用不同的handler
            'propagate': False
        },
        'service_logger': {  # 处理定时任务的日期记录
            'handlers': ['default', 'service_error', 'console'],
            'level': 'WARNING',
            'propagate': False
        },
        'http_logger': {  # 处理定时任务的日期记录
            'handlers': ['default', 'http_error', 'console'],
            'level': 'WARNING',
            'propagate': False
        },
    }
}

# swagger 配置项
SWAGGER_SETTINGS = {
    # 基础样式
    'USE_SESSION_AUTH': False,
    'SECURITY_DEFINITIONS': {
        'api_key': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'authorization'
        }
    },
    # 如果需要登录才能够查看接口文档, 登录的链接使用restframework自带的.
    'LOGIN_URL': 'rest_framework:login',
    'LOGOUT_URL': 'rest_framework:logout',
    # 'DOC_EXPANSION': None,
    # 'SHOW_REQUEST_HEADERS':True,
    # 'USE_SESSION_AUTH': True,
    # 'DOC_EXPANSION': 'list',
    # 接口文档中方法列表以首字母升序排列
    'APIS_SORTER': 'alpha',
    # 如果支持json提交, 则接口文档中包含json输入框
    'JSON_EDITOR': True,
    # 方法列表字母排序
    'OPERATIONS_SORTER': 'alpha',
    'VALIDATOR_URL': None,
    'SHOW_REQUEST_HEADERS': True,
}

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION': '/data/tmp/django_cache',
#         'TIMEOUT': 120,
#         'OPTIONS': {
#             'MAX_ENTRIES': 1000,
#             'server_max_value_length': 1024 * 1024 * 100,
#         }
#     }
# }
